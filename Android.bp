//
// Copyright (C) 2014 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

LIBCXX_SRC_FILES = [
    "src/algorithm.cpp",
    "src/bind.cpp",
    "src/chrono.cpp",
    "src/condition_variable.cpp",
    "src/debug.cpp",
    "src/exception.cpp",
    "src/future.cpp",
    "src/hash.cpp",
    "src/ios.cpp",
    "src/iostream.cpp",
    "src/locale.cpp",
    "src/memory.cpp",
    "src/mutex.cpp",
    "src/new.cpp",
    "src/optional.cpp",
    "src/random.cpp",
    "src/regex.cpp",
    "src/shared_mutex.cpp",
    "src/stdexcept.cpp",
    "src/string.cpp",
    "src/strstream.cpp",
    "src/system_error.cpp",
    "src/thread.cpp",
    "src/typeinfo.cpp",
    "src/utility.cpp",
    "src/valarray.cpp",
]

LIBCXX_C_INCLUDES = [
    "external/libcxxabi/include",
]

LIBCXX_LOCAL_C_INCLUDES = [
    "include/",
]

LIBCXX_CPPFLAGS = [
    "-std=c++14",
    "-nostdinc++",
    "-fexceptions",
]

// host + device static lib
cc_library_static {
    host_supported: true,
    name: "libc++_static",
    clang: true,
    srcs: LIBCXX_SRC_FILES,
    include_dirs: LIBCXX_C_INCLUDES,
    local_include_dirs: LIBCXX_LOCAL_C_INCLUDES,
    cppflags: LIBCXX_CPPFLAGS,
    rtti: true,
    whole_static_libs: [
        "libc++abi",
    ],
    stl: "none",
}

// host + device dynamic lib
cc_library_shared {
    host_supported: true,
    name: "libc++",
    clang: true,
    whole_static_libs: ["libc++_static"],
    stl: "none",

    target: {
        android: {
            shared_libs: ["libdl"],
        },
        android_arm: {
            static_libs: ["libunwind_llvm"],
            ldflags: ["-Wl,--exclude-libs,libunwind_llvm.a"],
        },
        host: {
            ldflags: ["-nodefaultlibs"],
        },
        darwin: {
            ldflags: [
                "-Wl,-unexported_symbols_list,${SrcDir}/external/libcxx/lib/libc++unexp.exp",
                "-Wl,-force_symbols_not_weak_list,${SrcDir}/external/libcxx/lib/notweak.exp",
                "-Wl,-force_symbols_weak_list,${SrcDir}/external/libcxx/lib/weak.exp",
            ],
        },

        linux: {
            host_ldlibs: [
                "-lrt",
                "-lpthread",
                "-ldl",
            ],
        },
    },
}


// Don't build for unbundled branches
// ANDROIDMK TRANSLATION ERROR: unsupported conditional
// ifeq (,$(TARGET_BUILD_APPS))
// host dynamic lib

// ANDROIDMK TRANSLATION ERROR: endif from unsupported contitional
// endif
// TARGET_BUILD_APPS

